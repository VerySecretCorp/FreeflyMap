{"mappings":";;;;;;;ACAA,4BAAiB,KAAK,KAAK,CAAC;;;;ADG5B,SAAS,2CAAqB,QAAQ;IAClC,+EAA+E;IAC/E,MAAM,eAAe;QACjB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,OAAM,eAAe;KACxB;IACD,MAAM,gBAAgB,WAAW;IACjC,MAAM,YAAY,aAAa,SAAS,CAAC,CAAA,YAAa,aAAa;IACnE,OAAO,aAAa,IAAI,YAAY,IAAI,aAAa,MAAM;AAC/D;AAEA,MAAM,yCAAmB,CAAC,aAAe,CAAC,KAAK,MAAM;QACjD,MAAM,gBAAgB,CAAA,GAAA,eAAO,EAAE,MAAM,CAAC,KAAK,MAAM,2CAAqB;QACtE,MAAM,kBAAkB,CAAA,GAAA,eAAO,EAAE,SAAS,CAAC;QAC3C,gBAAgB,IAAI,CAAC;QACrB,OAAO,WAAW,MAAM,CAAC,CAAA,IACrB,gBAAgB,IAAI,CAAC,CAAA,WAAY,EAAE,OAAO,CAAC,UAAU,CAAC;IAE9D;IAEA,yCAEA,eAAe;CACf,wBAAwB;CACxB,yBAAyB;CACzB,qBAAqB;CACrB,oEAAoE;CACpE,+FAA+F;CAE/F,8CAA8C;GAT/B,uCAAiB,CAAA,GAAA,gEAAI","sources":["neighbours.js","sites.json"],"sourcesContent":["import sites from './sites.json' assert { type: \"json\" }\nimport ngeohash from 'ngeohash'\n\nfunction kmToGeohashPrecision(radiusKm) {\n    // Approximate dimensions (width of the area) covered by each geohash precision\n    const dimensionsKm = [\n        5000, // 1 character\n        1250, // 2 characters\n        156,  // 3 characters\n        39,   // 4 characters\n        4.9,  // 5 characters\n        1.2,  // 6 characters\n        0.152,// 7 characters\n        0.038,// 8 characters\n        0.0048// 9 characters\n    ]\n    const targetWidthKm = radiusKm * 2\n    const precision = dimensionsKm.findIndex(dimension => dimension <= targetWidthKm)\n    return precision >= 0 ? precision + 1 : dimensionsKm.length\n}\n\nconst pointsFromCenter = (collection) => (lat, long, radiusKm) => {\n    const targetGeohash = ngeohash.encode(lat, long, kmToGeohashPrecision(radiusKm))\n    const targetNeighbors = ngeohash.neighbors(targetGeohash)\n    targetNeighbors.push(targetGeohash)\n    return collection.filter(s =>\n        targetNeighbors.some(neighbor => s.geohash.startsWith(neighbor))\n    )\n}\n\nexport default pointsFromCenter(sites)\n\n// // Edinburgh\n// const lat = 55.953251\n// const long = -3.188267\n// const radius = 150\n// const neighborsSites = pointsFromCenter(sites)(lat, long, radius)\n//     .map(({ pgMapId, lat, long, geohash, name }) => ({ pgMapId, lat, long, geohash, name }))\n\n// console.log(JSON.stringify(neighborsSites))",null],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}